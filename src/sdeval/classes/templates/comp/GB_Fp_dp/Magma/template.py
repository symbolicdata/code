"""
This is the template for the computation problem of computing a Groebner basis of an ideal
generated by a finite set of polynomials with coefficients in a finite field (commutative). It creates
code for the computer algebra system Magma.

.. moduleauthor:: Albert Heinle <albert.heinle@rwth-aachen.de>
"""

#--------------------------------------------------
#---------------The template-----------------------
#--------------------------------------------------

def generateCode(vars, basis, characteristic):
    """
    The main function generating the Magma code for the computation of
    the Groebner basis given the input variables.

    :param         vars: A list of variables used in the ModPS-System
    :type          vars: list
    :param        basis: The polynomials forming a basis of the ModPS-System. This input will not be checked whether
                         there are polynomials using variables not in the list of variables.
    :type         basis: list
    :param characteristic: The characteristic of the field where the coefficients are taken from.
    :type  characteristic: int
    """
    result = "\
F := FiniteField(%i);\n\
P<%s> := PolynomialRing(F,%i);\n\
I := ideal<P | %s>;\n\
B := GroebnerBasis(I);\n\
B;\n\
quit;\
" % (characteristic,
    ",".join(vars),
     len(vars),
     ",".join(basis))
    return result

#--------------------------------------------------
#----------------Help Functions--------------------
#--------------------------------------------------
