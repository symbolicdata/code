"""
This is the template for the computation problem of computing a Groebner basis of an ideal
generated by a finite set of polynomials with coefficients in a finite field (commutative). It creates
code for the computer algebra system REDUCE.

.. moduleauthor:: Albert Heinle <albert.heinle@rwth-aachen.de>
"""

#--------------------------------------------------
#---------------The template-----------------------
#--------------------------------------------------

def generateCode(vars, basis,characteristic):
    """
    The main function generating the REDUCE code for the computation of
    the Groebner basis given the input variables.

    :param         vars: A list of variables used in the ModPS-System
    :type          vars: list
    :param        basis: The polynomials forming a basis of the ModPS-System. This input will not be checked whether
                         there are polynomials using variables not in the list of variables.
    :type         basis: list
    :param characteristic: The characteristic of the field where the coefficients are taken from.
    :type  characteristic: int
    """
    result = """on modular$
off nat;
setmod %i$
load_package groebner;
torder({%s}, gradlex)$
write "=====Solution Begin=====";
groebner{%s};
write "=====Solution End=====";
quit;""" % (characteristic,
    ",".join(vars),
    ", ".join(basis))
    return result

#--------------------------------------------------
#----------------Help Functions--------------------
#--------------------------------------------------
